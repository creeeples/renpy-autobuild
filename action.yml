name: Ren'Py Autobuild + Deploy
author: 'Jason || Creeeples'
description: "A simple build action for Ren'Py projects using Docker"
branding:
  color: 'blue'
  icon: 'box'
  
on:
  push:
    branches:
      - 'release/*'

jobs:
  build-renpy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract Version from Branch Name
      id: extract_version
      run: |
          echo "old GITHUB_REF is $GITHUB_REF"
          GITHUB_REF=$(echo $GITHUB_REF | sed -e "s#refs/heads/release/##g")
          echo "::set-output name=ref::$GITHUB_REF"
      env:
        GITHUB_REF: ${{ github.ref }}

    - name: Format Release Name
      id: format_release_name
      run: |
        echo "::set-output name=release_name::Release-${{ steps.extract_version.outputs.ref }}"
      env:
        VERSION: ${{ steps.extract_version.outputs.ref }}
        
    - name: Format Release Tag
      id: format_tag_name
      run: |
        echo "::set-output name=tag_name::v${{ steps.extract_version.outputs.ref }}"
      env:
        VERSION: ${{ steps.extract_version.outputs.ref }}
        
    - name: Build VN Project
      id: build_project
      uses: creeeples/renpy-docker-builder@v1.0.2
      with:
        sdk-version: '8.1.1'
        project-dir: './game/'
      env:
        SDL_AUDIODRIVER: dummy
        SDL_VIDEODRIVER: dummy

    - name: Setup GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ github.token }}
        tag_name: ${{ steps.format_tag_name.outputs.tag_name }}
      env:
          GH_TOKEN: ${{ github.token }}

    - name: Upload All Build Folders
      run: |
        for file in ${{ steps.build_project.outputs.dir }}/*.zip; do
        echo "Uploading $file"
        asset_name=$(basename "$file")
        gh release upload ${{ steps.format_tag_name.outputs.tag_name }} "$file" --clobber
        done
      env:
          GH_TOKEN: ${{ github.token }}
          
    - name: ItchIO Upload
      uses: Ayowel/butler-to-itch@v1.0.0
      with:
        action: "push"
        install_dir: ~/.butler

    ###### Push options ######
    # Your butler key (see https://itch.io/user/settings/api-keys)
        butler_key: ""
    # The itch username of the user that distributes the game
        itch_user: ""
    # The name of the game in the project's url
        itch_game: "upload-test"
    # The game version number
        version: "${{ steps.format_tag_name.outputs.tag_name }}"
    # The files to push to itch.
    # File paths support globing and may start with a channel name.
        files: |
          mac ${{ steps.build_project.outputs.dir }}/*-mac.zip
          linux ${{ steps.build_project.outputs.dir }}/*-pc.zip 
          windows ${{ steps.build_project.outputs.dir }}/*-pc.zip
    # If no channel is provided for a file, to generate one from the
    # file's name.
        auto_channel: false

    ###### Install options ######
    # Whether to verify the downloaded Butler archive's signature
        check_signature: true
    # Whether to update the PATH variable to include Butler's
    # install directory
        update_path: false
        butler_version: "latest"
